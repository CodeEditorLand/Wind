self.MonacoEnvironment={createTrustedTypesPolicy:()=>{},getWorker:async(e,t)=>{switch(t){case"css":return new(await import("monaco-editor/esm/vs/language/css/css.worker.js?worker")).default;case"html":return new(await import("monaco-editor/esm/vs/language/html/html.worker.js?worker")).default;case"typescript":return new(await import("monaco-editor/esm/vs/language/typescript/ts.worker.js?worker")).default;default:return new(await import("monaco-editor/esm/vs/editor/editor.worker.js?worker")).default}}};var i=({children:e})=>createComponent(r.Provider,{value:r.defaultValue},createComponent("link",{rel:"stylesheet",media:"print",onload:t=>{t.target.removeAttribute("onload"),t.target.removeAttribute("media")},href:"https://fonts.googleapis.com/css2?family=Source+Code+Pro:wght@400&display=swap"}),e);const{editor:a,languages:o}=await import("monaco-editor");o.typescript.typescriptDefaults.setEagerModelSync(!0),a.defineTheme("Light",(await import("../Script/Monaco/Theme/Active4D.json")).default),a.defineTheme("Dark",(await import("../Script/Monaco/Theme/Amoled.json")).default),window.matchMedia("(prefers-color-scheme: dark)").addEventListener("change",({matches:e})=>a.setTheme(e?"Dark":"Light"));const{_Function:r}=await import("./Action/Context.js");export{a as Monaco,r as _Function,i as default,o as languages};
